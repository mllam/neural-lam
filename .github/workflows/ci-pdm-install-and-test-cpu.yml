# cicd workflow for running tests with pytest
# needs to first install pdm, then install torch cpu manually and then install the package
# then run the tests

name: test (pdm install, cpu)

on: [push, pull_request]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install pdm
        run: |
          python -m pip install pdm

      - name: Create venv
        run: |
          pdm venv create --with-pip
          pdm use --venv in-project

      - name: Install torch (CPU)
        run: |
          # torch version pinned to 2.5.1 for now so that we avoid the
          # downgrade (and then GPU version install) when actually installing
          # neural-lam
          pdm run python -m pip install "torch==2.5.1" --index-url https://download.pytorch.org/whl/cpu

      - name: Install package (including dev dependencies)
        run: |
          pdm install --group :all

      - name: Print and check torch version
        run: |
          pdm run python -c "import torch; print(torch.__version__)"
          pdm run python -c "import torch; assert torch.__version__.endswith('+cpu')"

      - name: Load cache data
        uses: actions/cache/restore@v4
        with:
          path: tests/datastore_examples/npyfilesmeps/meps_example_reduced.tar.gz
          key: ${{ runner.os }}-meps-reduced-example-data-v0.3.0
          restore-keys: |
            ${{ runner.os }}-meps-reduced-example-data-v0.3.0

      - name: Run tests
        run: |
          pdm run pytest -vv -s

      - name: Save cache data
        uses: actions/cache/save@v4
        with:
          path: tests/datastore_examples/npyfilesmeps/meps_example_reduced.tar.gz
          key: ${{ runner.os }}-meps-reduced-example-data-v0.3.0
